# Generated by Django 5.1.5 on 2025-10-27 06:52

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("survey_api", "0029_make_survey_type_optional"),
    ]

    operations = [
        migrations.CreateModel(
            name="QualityCheck",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "file_name",
                    models.CharField(
                        help_text="Original uploaded file name", max_length=255
                    ),
                ),
                (
                    "total_g_t_difference",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total G(t) difference",
                        max_digits=12,
                    ),
                ),
                (
                    "total_w_t_difference",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total W(t) difference",
                        max_digits=12,
                    ),
                ),
                (
                    "total_g_t_difference_pass",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total G(t) difference for PASS stations",
                        max_digits=12,
                    ),
                ),
                (
                    "total_w_t_difference_pass",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total W(t) difference for PASS stations",
                        max_digits=12,
                    ),
                ),
                (
                    "g_t_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="G(t) quality percentage",
                        max_digits=5,
                    ),
                ),
                (
                    "w_t_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="W(t) quality percentage",
                        max_digits=5,
                    ),
                ),
                (
                    "pass_count",
                    models.IntegerField(
                        help_text="Number of stations with PASS status"
                    ),
                ),
                (
                    "remove_count",
                    models.IntegerField(
                        help_text="Number of stations with REMOVE status"
                    ),
                ),
                (
                    "md_data",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(),
                        help_text="Measured Depth data",
                        size=None,
                    ),
                ),
                (
                    "inc_data",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(),
                        help_text="Inclination data",
                        size=None,
                    ),
                ),
                (
                    "azi_data",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(),
                        help_text="Azimuth data",
                        size=None,
                    ),
                ),
                (
                    "gt_data",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(),
                        help_text="G(t) data from file",
                        size=None,
                    ),
                ),
                (
                    "wt_data",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(),
                        help_text="W(t) data from file",
                        size=None,
                    ),
                ),
                (
                    "g_t_difference_data",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(),
                        help_text="G(t) difference for each station",
                        size=None,
                    ),
                ),
                (
                    "w_t_difference_data",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(),
                        help_text="W(t) difference for each station",
                        size=None,
                    ),
                ),
                (
                    "g_t_status_data",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=10),
                        help_text="G(t) status for each station (high/good/low/n/c)",
                        size=None,
                    ),
                ),
                (
                    "w_t_status_data",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=10),
                        help_text="W(t) status for each station (high/good/low/n/c)",
                        size=None,
                    ),
                ),
                (
                    "overall_status_data",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=10),
                        help_text="Overall status for each station (PASS/REMOVE)",
                        size=None,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        help_text="QA review status",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "run",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quality_checks",
                        to="survey_api.run",
                    ),
                ),
            ],
            options={
                "db_table": "quality_checks",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["run", "status"], name="quality_che_run_id_f077b8_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="quality_che_created_ad4933_idx"
                    ),
                ],
            },
        ),
    ]
