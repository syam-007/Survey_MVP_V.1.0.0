# Generated by Django 5.2.7 on 2025-10-12 08:09

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("survey_api", "0003_run_deleted_run_deleted_at"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="location",
            options={},
        ),
        migrations.AddField(
            model_name="location",
            name="g_t",
            field=models.DecimalField(
                blank=True,
                decimal_places=8,
                help_text="Grid convergence at point (calculated)",
                max_digits=12,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="location",
            name="grid_correction",
            field=models.DecimalField(
                blank=True,
                decimal_places=6,
                help_text="Grid correction angle (calculated)",
                max_digits=10,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="location",
            name="max_g_t",
            field=models.DecimalField(
                blank=True,
                decimal_places=8,
                help_text="Maximum grid convergence (calculated)",
                max_digits=12,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="location",
            name="max_w_t",
            field=models.DecimalField(
                blank=True,
                decimal_places=8,
                help_text="Maximum scale factor (calculated)",
                max_digits=12,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="location",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="location",
            name="w_t",
            field=models.DecimalField(
                blank=True,
                decimal_places=8,
                help_text="Scale factor at point (calculated)",
                max_digits=12,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="location",
            name="well",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="location",
                to="survey_api.well",
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="central_meridian",
            field=models.DecimalField(
                decimal_places=3,
                default=Decimal("0.0"),
                help_text="Central meridian for grid calculations",
                max_digits=8,
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="easting",
            field=models.DecimalField(
                blank=True,
                decimal_places=3,
                help_text="UTM Easting coordinate (calculated)",
                max_digits=12,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="geodetic_system",
            field=models.CharField(
                default="WGS84",
                help_text="Geodetic datum system (e.g., WGS84, NAD83)",
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="latitude",
            field=models.DecimalField(
                decimal_places=8,
                help_text="Latitude in decimal degrees (-90 to 90)",
                max_digits=10,
                validators=[
                    django.core.validators.MinValueValidator(Decimal("-90.0")),
                    django.core.validators.MaxValueValidator(Decimal("90.0")),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="longitude",
            field=models.DecimalField(
                decimal_places=8,
                help_text="Longitude in decimal degrees (-180 to 180)",
                max_digits=11,
                validators=[
                    django.core.validators.MinValueValidator(Decimal("-180.0")),
                    django.core.validators.MaxValueValidator(Decimal("180.0")),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="map_zone",
            field=models.CharField(
                default="15N",
                help_text="UTM zone or map zone identifier",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="north_reference",
            field=models.CharField(
                choices=[
                    ("True North", "True North"),
                    ("Grid North", "Grid North"),
                    ("Magnetic North", "Magnetic North"),
                ],
                default="True North",
                help_text="Reference north type",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="northing",
            field=models.DecimalField(
                blank=True,
                decimal_places=3,
                help_text="UTM Northing coordinate (calculated)",
                max_digits=12,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="run",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="location",
                to="survey_api.run",
            ),
        ),
        migrations.AddIndex(
            model_name="location",
            index=models.Index(fields=["run"], name="idx_locations_run_id"),
        ),
        migrations.AddIndex(
            model_name="location",
            index=models.Index(fields=["well"], name="idx_locations_well_id"),
        ),
        migrations.AddConstraint(
            model_name="location",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    models.Q(("run__isnull", False), ("well__isnull", True)),
                    models.Q(("run__isnull", True), ("well__isnull", False)),
                    _connector="OR",
                ),
                name="location_run_or_well_check",
            ),
        ),
    ]
